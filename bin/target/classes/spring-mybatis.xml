<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
		    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
		    http://www.springframework.org/schema/tx    
		    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd   
		    http://www.springframework.org/schema/context   
		    http://www.springframework.org/schema/context/spring-context-4.0.xsd 
		    http://www.springframework.org/schema/aop
		    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
		    http://www.springframework.org/schema/mvc   
		    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		    http://www.springframework.org/schema/task
		    http://www.springframework.org/schema/task/spring-task-4.0.xsd">
	
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.zimmur.platform.manage.web">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan> 
     <!-- 配置线程池 -->  
	<bean id ="taskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >  
	    <!-- 线程池维护线程的最少数量 -->  
		<property name ="corePoolSize" value ="5" />  
	    <!-- 线程池维护线程所允许的空闲时间 -->  
		<property name ="keepAliveSeconds" value ="30000" />  
	    <!-- 线程池维护线程的最大数量 -->  
		<property name ="maxPoolSize" value ="500" />  
	    <!-- 线程池所使用的缓冲队列 -->  
		<property name ="queueCapacity" value ="100" />  
	</bean> 
	
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" >
		    <property name="driverClassName">
		      <value>${jdbc.driverClassName}</value>
		    </property>
		    <property name="url">
		      <value>${jdbc.url}</value>
		    </property>
		    <property name="username">
		      <value>${jdbc.username}</value>
		    </property>
		    <property name="password">
		      <value>${jdbc.password}</value>
		    </property>
		    <!-- 连接池最大使用连接数 -->
		    <property name="maxActive">
		      <value>20</value>
		    </property>
		    <!-- 初始化连接大小 -->
		    <property name="initialSize">
		      <value>1</value>
		    </property>
		    <!-- 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true -->
		    <property name="maxOpenPreparedStatements">
		    	<value>50</value>
		    </property>
		    <!-- 不影响性能，并且保证安全性 -->
		    <property name="testWhileIdle">
		    	<value>true</value>
		    </property>
		    <!-- 连接池最小空闲 -->
		    <property name="minIdle">
		      <value>3</value>
		    </property>
		    <!-- 自动清除无用连接 -->
		    <property name="removeAbandoned">
		      <value>true</value>
		    </property>
		    <!-- 清除无用连接的等待时间 -->
		    <property name="removeAbandonedTimeout">
		      <value>300</value>
		    </property>
		    <!-- 连接属性 -->
		    <property name="connectionProperties">
		      <value>clientEncoding=UTF-8</value>
		    </property>
	  </bean>
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>  
    </bean>
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zimmur.platform.manage.web.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
</beans>  