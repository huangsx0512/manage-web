<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zimmur.platform.manage.web.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.zimmur.platform.manage.web.domain.model.Role" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="is_enabled" property="isEnabled" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="RoleInfoVoResultMap" type="com.zimmur.platform.manage.web.domain.vo.RoleInfoVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="is_enabled" property="isEnabled" jdbcType="TINYINT" />
    <result column="ment" property="ment" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="RoleInfoResultMap" type="com.zimmur.platform.manage.web.domain.vo.RoleVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="is_enabled" property="isEnabled" jdbcType="TINYINT" />
    <result column="choose" property="choose" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, is_enabled
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zimmur.platform.manage.web.domain.model.RoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 多参数分页查询应用信息(包含该角色的权限) -->
  <select id="queryRoleInfo" resultMap="RoleInfoVoResultMap">
  select a.id,a.name,a.is_enabled,group_concat(d.name) ment
   from  role a LEFT JOIN (select b.*,c.name from role_ment b LEFT JOIN ment c on b.ment_id = c.id)d ON a.id = d.role_id 
   where 1=1 
   <if test='keyword !=null and keyword !="" '>
   		and a.name LIKE CONCAT('%',#{keyword},'%')
   </if>
   group by a.id order by a.id DESC
   limit #{pageBeginNo},#{pageSize}  
  </select>
  
  <!-- 多参数分页查询总数 -->
  <select id="countByParam" resultType="java.lang.Integer">
  select count(t.id) from
   (select a.id,a.name,a.is_enabled,group_concat(d.name) ment
   from  role a LEFT JOIN (select b.*,c.name from role_ment b LEFT JOIN ment c on b.ment_id = c.id)d ON a.id = d.role_id 
   where 1=1 
   <if test='keyword !=null and keyword !="" '>
   		and a.name LIKE CONCAT('%',#{keyword},'%')
   </if>
   group by a.id order by a.id DESC)t  
  </select>
  
  <!-- 查询应用的角色以及判断此角色是否被应用选中(根据应用id) -->
  <select id="queryRoleInfoByAppId" resultMap="RoleInfoResultMap" parameterType="java.lang.Integer" >
    SELECT d.id,d.name,d.is_enabled,MAX(d.is_checked) as choose
	FROM (
		SELECT  a.*, 1 AS is_checked
		FROM role a LEFT JOIN app_role b ON a.id = b.role_id
		WHERE 1=1
		<if test="appId != null" >
            and b.app_id= ${appId}
        </if>
		UNION 
		SELECT  c.*,0 AS is_checked
		FROM role c )d
	GROUP BY d.id
	order by id asc
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zimmur.platform.manage.web.domain.model.RoleExample" >
    delete from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zimmur.platform.manage.web.domain.model.Role" >
    insert into role (id, name, is_enabled
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{isEnabled,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zimmur.platform.manage.web.domain.model.Role" useGeneratedKeys="true" keyProperty="id">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="isEnabled != null" >
        is_enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="isEnabled != null" >
        #{isEnabled,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zimmur.platform.manage.web.domain.model.RoleExample" resultType="java.lang.Integer" >
    select count(*) from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnabled != null" >
        is_enabled = #{record.isEnabled,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update role
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      is_enabled = #{record.isEnabled,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zimmur.platform.manage.web.domain.model.Role" >
    update role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="isEnabled != null" >
        is_enabled = #{isEnabled,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zimmur.platform.manage.web.domain.model.Role" >
    update role
    set name = #{name,jdbcType=VARCHAR},
      is_enabled = #{isEnabled,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>