<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zimmur.platform.manage.web.dao.MentMapper" >
  <resultMap id="BaseResultMap" type="com.zimmur.platform.manage.web.domain.model.Ment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="api_server" property="apiServer" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="SMALLINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="MentInfoResultMap" type="com.zimmur.platform.manage.web.domain.vo.MentVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="status" property="isEnabled" jdbcType="SMALLINT" />
    <result column="choose" property="choose" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, api_server, name, url, method, status, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zimmur.platform.manage.web.domain.model.MentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zimmur.platform.manage.web.domain.model.MentExample" >
    delete from ment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zimmur.platform.manage.web.domain.model.Ment" >
    insert into ment (id, api_server, name, 
      url, method, status, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{apiServer,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zimmur.platform.manage.web.domain.model.Ment" >
    insert into ment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="apiServer != null" >
        api_server,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="apiServer != null" >
        #{apiServer,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zimmur.platform.manage.web.domain.model.MentExample" resultType="java.lang.Integer" >
    select count(*) from ment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <!-- 查询角色的权限以及判断此权限是否被角色选中(根据应用id) -->
  <select id="queryMentInfoByRoleId" resultMap="MentInfoResultMap" parameterType="java.lang.Integer" >
  SELECT d.id,d.name,d.status,MAX(d.is_checked) as choose
	FROM (
		SELECT  a.*, 1 AS is_checked
		FROM ment a LEFT JOIN role_ment b ON a.id = b.ment_id
		WHERE 1=1
		<if test="roleId != null" >
		 and b.role_id=${roleId} and status='1'
		</if>
		UNION 
		SELECT  c.*,0 AS is_checked
		FROM ment c )d
	GROUP BY d.id
	order by id asc
  </select>
  
   <!-- 多参数分页查询应用信息 -->
  <select id="queryMentInfo" resultMap="BaseResultMap">
  select a.id,a.api_server,a.name,a.url,a.method,a.status,a.create_time
   from  ment a
   where 1=1 
   <if test='keyword !=null and keyword !="" '>
   		and (a.name LIKE CONCAT('%',#{keyword},'%') or a.api_server LIKE CONCAT('%',#{keyword},'%'))
   </if>
   order by a.id DESC
   limit #{pageBeginNo},#{pageSize}  
  </select>
  
  <!-- 多参数分页查询总数 -->
  <select id="countByParam" resultType="java.lang.Integer">
   select count(a.id)
   from  ment a
   where 1=1 
   <if test='keyword !=null and keyword !="" '>
   		and (a.name LIKE CONCAT('%',#{keyword},'%') or a.api_server LIKE CONCAT('%',#{keyword},'%'))
   </if>
   order by a.id DESC
  </select>
  
  <update id="updateByExampleSelective" parameterType="map" >
    update ment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.apiServer != null" >
        api_server = #{record.apiServer,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null" >
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ment
    set id = #{record.id,jdbcType=INTEGER},
      api_server = #{record.apiServer,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=SMALLINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zimmur.platform.manage.web.domain.model.Ment" >
    update ment
    <set >
      <if test="apiServer != null" >
        api_server = #{apiServer,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zimmur.platform.manage.web.domain.model.Ment" >
    update ment
    set api_server = #{apiServer,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      status = #{status,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>